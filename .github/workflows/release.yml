name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install frontend dependencies
        run: pnpm install
      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Install Rust dependencies
        working-directory: ./src-tauri
        run: cargo fetch --locked
      - name: Build the app
        run: pnpm tauri build
      - name: Create Release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: |
            ${{ matrix.platform == 'windows-latest' && 'src-tauri/target/release/bundle/msi/*.msi' || '' }}
            ${{ matrix.platform == 'windows-latest' && 'src-tauri/target/release/bundle/nsis/*-setup.exe' || '' }}
            ${{ matrix.platform == 'ubuntu-latest' && 'src-tauri/target/release/bundle/deb/*.deb' || '' }}
            ${{ matrix.platform == 'ubuntu-latest' && 'src-tauri/target/release/bundle/appimage/*.AppImage' || '' }}
            ${{ matrix.platform == 'macos-latest' && 'src-tauri/target/release/bundle/dmg/*.dmg' || '' }}
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          draft: false
          prerelease: false
          allowUpdates: true